{"version":3,"sources":["components/Calendar.jsx","components/Event.jsx","appConstants.js","redux/action.js","components/AddEvent.jsx","pages/Events.jsx","pages/Login.jsx","pages/Logout.jsx","components/RHFTextField.jsx","components/RHFSelect.jsx","pages/Admin/Points.jsx","pages/Admin/Reset.jsx","components/LinkTab.jsx","components/GoogleLoginButton.jsx","components/Banner.jsx","pages/Admin/AwardsTable.jsx","pages/Admin/UsersTable.jsx","pages/Compassion.png","pages/Grit.png","pages/Tenacious.png","pages/Visionary.png","components/House.jsx","components/PieChart.jsx","components/Award.jsx","pages/Scoreboard.jsx","pages/Admin/SchoolYearsTable.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Calendar","className","title","src","style","border","width","height","frameBorder","scrolling","Component","Event","props","componentDidMount","setState","multiday","state","start","day","end","allday","data","summary","raw","dateTime","moment","date","format","time","description","location","htmlLink","Card","variant","this","dangerouslySetInnerHTML","__html","href","baseUrl","GET_ACTIVE_SCHOOLYEAR","GET_POINTS","GET_EVENTS","UPDATE_POINTS","SET_TOKEN","GET_RECENT_AWARDS","UPDATE_AWARDS_DELETED","UPDATE_AWARDS","getActiveSchoolyear","dispatch","axios","appConstants","method","then","response","type","payload","catch","error","deleteUser","SK","url","delete","createUser","user","post","mode","headers","withCredentials","getPoints","get","validateJWT","setToken","token","getSchoolYearNames","reset","schoolYear","AddEvent","target","rel","textDecoration","Button","color","size","Events","getEvents","class","events","length","map","event","i","connect","window","gapi","client","init","apiKey","request","path","params","timeMin","Date","toISOString","orderBy","sortOrder","singleEvents","result","items","success","actions","RHFTextField","useController","name","control","rules","defaultValue","field","onChange","onBlur","value","ref","fieldState","invalid","isTouched","isDirty","formState","touchedFields","dirtyFields","TextField","fullWidth","helperText","message","inputRef","label","RHFSelect","FormControl","InputLabel","Select","labelId","id","options","option","MenuItem","FormHelperText","active","awardPoints","points","award","auth","useForm","defaultValues","student","category","house","handleSubmit","register","errors","onSubmit","parseInt","handleSetAlert","useState","alert","setAlert","severity","handleCloseAlert","reason","required","min","pattern","category_names","house_names","onClick","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","Alert","React","forwardRef","elevation","getActive","setOpen","handleClose","showAlert","handleOpenAlert","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","fontWeight","LinkTab","Typography","click","to","CLIENT_ID","GoogleButton","textTransform","borderColor","startIcon","fontSize","email","setEmail","showUserNotFoundError","setShowUserNotFoundError","handleCloseUserNotFoundError","Box","display","alignItems","pl","pr","clientId","onLogoutSuccess","render","renderProps","onSuccess","profileObj","innerResponse","tokenId","onFailure","cookiePolicy","isSignedIn","Banner","handleMenuClose","menuOpen","isAuthenticated","Grid","container","AppBar","component","position","Toolbar","item","xs","Drawer","anchor","sm","activeSchoolYear","tableIcons","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","awards","getAllAwards","page","updateAward","put","deleteAward","awardId","houseLookup","reduce","houseMap","columns","hidden","validate","rowData","Boolean","student_name","isValid","Number","lookup","pointCategoryMap","pointCategory","category_name","validation","house_name","editable","createdDateString","utcDate","tz","createdDateToString","created_time","column","sorting","px","py","maxBodyHeight","search","pageSize","emptyRowsWhenPaging","localization","body","editRow","deleteText","query","Promise","resolve","reject","content","totalCount","icons","onRowUpdate","newData","oldData","finally","onRowDelete","getAllUsers","updateUser","users","setUsers","showAddDialog","setShowAddDialog","loadUsers","useEffect","EmailValidator","paging","icon","tooltip","isFreeAction","flexDirection","padding","pt","House","chart","labels","legend","show","horizontalAlign","series","scores","md","logo","score","Award","timeStamp","spacing","gap","justifyContent","Scoreboard","setActiveSchoolYear","setPoints","activity","setActivity","schoolYearNames","setSchoolYearNames","selectedSchoolYearId","setSelectedSchoolYearId","selectedSchoolYearIdRef","useRef","current","logos","compassion","grit","tenacious","visionary","legendClasses","loadActiveSchoolYear","loadPoints","loadActivity","loadSchoolYearNames","interval","setInterval","refresh","clearInterval","schoolYearId","getTimeSince","dateOfActivity","now","from","pb","schoolyear_name","a","b","showLegend","containerSpacing","reward","indexOf","getActivity","getAllSchoolYears","updateSchoolYear","startNewSchoolYear","setActive","sk","schoolYears","setSchoolYears","loadSchoolYears","is_active","confirm","disabled","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","concat","newAwards","filter","store","createStore","composeWithDevTools","ReactDOM","StrictMode","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.b8249bff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/Calendar.scss\";\r\n\r\nclass Calendar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Calendar\">\r\n        <div className=\"Calendar-desktop Calendar-responsive\">\r\n          <iframe\r\n            title=\"Calendar\"\r\n            src=\"https://calendar.google.com/calendar/embed?src=bhm7gs9g9604s5o5io52p4n7f0%40group.calendar.google.com&ctz=America%2FNew_York\"\r\n            style={{ border: \"solid 1px #777\" }}\r\n            width=\"100%\"\r\n            height=\"650\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n          ></iframe>\r\n        </div>\r\n        <div className=\"Calendar-mobile Calendar-responsive\">\r\n          <iframe\r\n            title=\"Calendar\"\r\n            src=\"https://calendar.google.com/calendar/embed?mode=AGENDA&amp;wkst=1&amp;src=bhm7gs9g9604s5o5io52p4n7f0%40group.calendar.google.com&ctz=America%2FNew_York\"\r\n            style={{ border: \"solid 1px #777\" }}\r\n            width=\"100%\"\r\n            height=\"600\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"../styles/Event.scss\";\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: props.data.summary,\r\n      start: {\r\n        raw: props.data.start.dateTime,\r\n        day: moment(\r\n          props.data.start.dateTime\r\n            ? props.data.start.dateTime\r\n            : props.data.start.date\r\n        ).format(\"MMMM Do\"),\r\n        time: moment(props.data.start.dateTime).format(\"h:mm a\"),\r\n      },\r\n      end: {\r\n        raw: props.data.end.dateTime,\r\n        day: moment(\r\n          props.data.end.dateTime\r\n            ? props.data.end.dateTime\r\n            : props.data.end.date\r\n        ).format(\"MMMM Do\"),\r\n        time: moment(props.data.end.dateTime).format(\"h:mm a\"),\r\n      },\r\n      description: props.data.description,\r\n      location: props.data.location,\r\n      htmlLink: props.data.htmlLink,\r\n      multiday: false,\r\n      allday: props.data.start.date ? true : false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      multiday:\r\n        this.state.start.day == this.state.end.day || this.state.allday\r\n          ? false\r\n          : true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Event\">\r\n        <Card className=\"Event-wrapper\" variant=\"outlined\">\r\n          <div className=\"Event-title\">\r\n            <h3>\r\n              {this.state.multiday\r\n                ? this.state.start.day + \"  to \" + this.state.end.day\r\n                : this.state.start.day}\r\n              : {this.state.title}\r\n            </h3>\r\n          </div>\r\n          <div className=\"Event-time\">\r\n            {this.state.allday\r\n              ? \"All-day event\"\r\n              : this.state.start.time +\r\n                \" \" +\r\n                (this.state.multiday ? \" on \" + this.state.start.day : \"\") +\r\n                \" to \" +\r\n                this.state.end.time +\r\n                \" \" +\r\n                (this.state.multiday ? \" on \" + this.state.end.day : \"\")}\r\n          </div>\r\n          <div className=\"Event-location\">{this.state.location}</div>\r\n          <div\r\n            className=\"Event-description\"\r\n            dangerouslySetInnerHTML={{ __html: this.state.description }}\r\n          ></div>\r\n          <a className=\"Event-moreInfo\" href={this.state.htmlLink}>\r\n            More info\r\n          </a>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","// export const baseUrl = \"http://localhost:8080/api/\";\r\n// export const baseUrl = \"/api/\";\r\nexport const baseUrl =\r\n  \"https://ecgaoznmyzljat6gepk5x4klla0gfzdq.lambda-url.us-east-1.on.aws/\";\r\n\r\nexport const GET_ACTIVE_SCHOOLYEAR = \"GET_ACTIVE_SCHOOLYEAR\";\r\n\r\nexport const GET_POINTS = \"GET_POINTS\";\r\n\r\nexport const GET_EVENTS = \"GET_EVENTS\";\r\n\r\nexport const UPDATE_POINTS = \"UPDATE_POINTS\";\r\n\r\nexport const SET_TOKEN = \"SET_TOKEN\";\r\n\r\nexport const gapiKey = \"AIzaSyBhdSl7351Xhp5O1BL7TYswxSRXvszk3d8\";\r\n\r\nexport const calendarID =\r\n  \"bhm7gs9g9604s5o5io52p4n7f0@group.calendar.google.com\";\r\n\r\nexport const GET_RECENT_AWARDS = \"GET_RECENT_AWARDS\";\r\n\r\nexport const UPDATE_AWARDS_DELETED = \"UPDATE_AWARDS_DELETED\";\r\n\r\nexport const UPDATE_AWARDS = \"UPDATE_AWARDS\";\r\n\r\nexport const SCOREBOARD_REFRESH_TIME = 60000;\r\n","import * as appConstants from \"../appConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const awardPoints = (dispatch, award) => {\r\n  //TODO: update store once points are awarded\r\n\r\n  let url = appConstants.baseUrl + \"award\";\r\n\r\n  return axios.post(url, award, {\r\n    method: \"POST\",\r\n    // mode: \"no-cors\",\r\n    headers: {\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const createHouse = (house) => {\r\n  let url = appConstants.baseUrl + \"house/create/\" + house.name;\r\n\r\n  //TODO: update store once the house is created\r\n\r\n  axios(url, house, {\r\n    method: \"POST\",\r\n    mode: \"no-cors\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    withCredentials: false,\r\n  })\r\n    .then((response) => {})\r\n    .catch(function (error) {});\r\n};\r\n\r\nexport const getActiveSchoolyear = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"schoolyear\";\r\n\r\n  axios(url, {\r\n    method: \"GET\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  })\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: appConstants.GET_ACTIVE_SCHOOLYEAR,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch(function (error) {});\r\n};\r\nexport const getActiveSchoolyearPromise = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"schoolyear\";\r\n\r\n  return axios(url, {\r\n    method: \"GET\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const getAllUsers = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"users\";\r\n\r\n  return axios(url, {\r\n    method: \"GET\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const updateUser = (dispatch, user) => {\r\n  let url = appConstants.baseUrl + `users/` + user.SK;\r\n\r\n  return axios.put(url, user, {\r\n    method: \"PUT\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const setSchoolYearActive = (dispatch, sk) => {\r\n  let url = appConstants.baseUrl + `schoolyear/active/${sk}`;\r\n\r\n  return axios.put(\r\n    url,\r\n    {},\r\n    {\r\n      method: \"PUT\",\r\n      // mode: \"no-cors\",\r\n      // headers: {\r\n      //   \"Access-Control-Allow-Origin\": \"*\",\r\n      // },\r\n      // withCredentials: false,\r\n    }\r\n  );\r\n};\r\n\r\nexport const updateSchoolYearName = (dispatch, schoolYear) => {\r\n  let url = appConstants.baseUrl + `schoolyear/` + schoolYear.SK;\r\n\r\n  return axios.put(url, schoolYear, {\r\n    method: \"PUT\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const deleteUser = (dispatch, SK) => {\r\n  let url = appConstants.baseUrl + `users/${SK}`;\r\n\r\n  return axios.delete(url, {\r\n    method: \"DELETE\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const createUser = (dispatch, user) => {\r\n  let url = appConstants.baseUrl + `users`;\r\n\r\n  return axios.post(url, user, {\r\n    method: \"POST\",\r\n    mode: \"no-cors\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const getAllAwards = (dispatch, page, size) => {\r\n  let url = appConstants.baseUrl + `award?page=${page}&size=${size}`;\r\n  // let url = appConstants.baseUrl + `award`;\r\n\r\n  return axios(url, {\r\n    method: \"GET\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const updateAward = (dispatch, award) => {\r\n  let url = appConstants.baseUrl + \"award/\" + award.SK;\r\n\r\n  return axios\r\n    .put(url, award, {\r\n      method: \"PUT\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      withCredentials: false,\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: appConstants.UPDATE_AWARDS,\r\n        payload: award,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteAward = (dispatch, id) => {\r\n  let url = appConstants.baseUrl + `award/${id}`;\r\n\r\n  return axios\r\n    .delete(url, {\r\n      method: \"DELETE\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      withCredentials: false,\r\n    })\r\n    .then((response) => {\r\n      dispatch({\r\n        type: appConstants.UPDATE_AWARDS_DELETED,\r\n        payload: id,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getPoints = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"points/\";\r\n  axios\r\n    .get(url, {\r\n      method: \"GET\",\r\n    })\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: appConstants.GET_POINTS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch(function (error) {});\r\n};\r\n\r\nexport const getPointsPromise = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"points/\";\r\n  return axios.get(url, {\r\n    method: \"GET\",\r\n  });\r\n};\r\n\r\nexport const getPointsIntegersPromise = (id, dispatch) => {\r\n  let url = appConstants.baseUrl + \"points/\" + id;\r\n\r\n  return axios.get(url, {\r\n    method: \"GET\",\r\n  });\r\n};\r\n\r\nexport const validateJWT = (dispatch, user) => {\r\n  let url = appConstants.baseUrl + \"auth/validate\";\r\n  return axios.post(url, user, {\r\n    method: \"POST\",\r\n  });\r\n};\r\n\r\nexport const setToken = (dispatch, token) => {\r\n  dispatch({\r\n    type: appConstants.SET_TOKEN,\r\n    payload: token,\r\n  });\r\n};\r\n\r\nexport const getEvents = (dispatch) => {\r\n  let calendarId = appConstants.calendarID;\r\n\r\n  window.gapi.client\r\n    .init({\r\n      apiKey: appConstants.gapiKey,\r\n    })\r\n    .then(function () {\r\n      return window.gapi.client.request({\r\n        path:\r\n          \"https://www.googleapis.com/calendar/v3/calendars/\" +\r\n          calendarId +\r\n          \"/events\",\r\n        params: {\r\n          timeMin: new Date().toISOString(),\r\n          orderBy: \"startTime\",\r\n          sortOrder: \"descending\",\r\n          singleEvents: true,\r\n        },\r\n      });\r\n    })\r\n    .then((response) => {\r\n      let events = response.result.items;\r\n      dispatch({\r\n        type: appConstants.GET_EVENTS,\r\n        payload: events,\r\n        success: events ? true : false,\r\n      });\r\n    })\r\n    .catch((error) => {});\r\n};\r\n\r\nexport const getIdByName = (name, schoolData) => {\r\n  schoolData.forEach((category) => {\r\n    if (category.name === name) return category.id;\r\n  });\r\n  return -1;\r\n};\r\n\r\nexport const getRecentAwards = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"award/recent\";\r\n\r\n  axios(url, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return dispatch({\r\n        type: appConstants.GET_RECENT_AWARDS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch(function (error) {});\r\n};\r\n\r\nexport const getRecentAwardsPromise = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"award/recent\";\r\n\r\n  return axios(url, {\r\n    method: \"GET\",\r\n  });\r\n};\r\n\r\nexport const getSchoolYearNames = (dispatch) => {\r\n  let url = appConstants.baseUrl + \"schoolyear/all\";\r\n\r\n  return axios(url, {\r\n    method: \"GET\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n\r\nexport const reset = (dispatch, schoolYear) => {\r\n  let url = appConstants.baseUrl + `schoolyear`;\r\n\r\n  return axios.post(url, schoolYear, {\r\n    method: \"POST\",\r\n    // mode: \"no-cors\",\r\n    // headers: {\r\n    //   \"Access-Control-Allow-Origin\": \"*\",\r\n    // },\r\n    // withCredentials: false,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AddEvent extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <a className=\"primary-cta\" href=\"https://calendar.google.com/calendar?cid=c3FtMnVkaTFhZGY2ZHM3Z2o5aDgxdHVldDhAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ\" target=\"_blank\" rel=\"noreferrer\" style={{textDecoration: \"none\"}}>\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\">Add Event</Button>\r\n                </a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEvent;","import React, { Component } from \"react\";\r\nimport Calendar from \"../components/Calendar\";\r\nimport Event from \"../components/Event\";\r\nimport \"../styles/Events.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/action\";\r\nimport AddEvent from \"../components/AddEvent\";\r\n\r\nclass Events extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.getEvents();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Events\">\r\n        <div className=\"Events-header\">\r\n          <div class={this.props.token ? \"Events-add\" : \"Events-hide\"}>\r\n            <AddEvent />\r\n          </div>\r\n          <h1>Upcoming Events</h1>\r\n        </div>\r\n        <div className=\"Events-content\">\r\n          <div class=\"Events-calendar\">\r\n            <Calendar />\r\n          </div>\r\n          {this.props.events.length > 0 ? (\r\n            <div className=\"Events-upcoming\">\r\n              {this.props.events.map((event, i) => {\r\n                return i < 3 ? (\r\n                  <Event key={i} data={event}></Event>\r\n                ) : (\r\n                  <div></div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    events: state.events,\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getEvents: () => actions.getEvents(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\r\n","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return(\r\n            <h1>Thank you for logging in!</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n    render() {\r\n        return(\r\n            <h1>Thank you for logging out!</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import { TextField } from \"@material-ui/core\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nexport const RHFTextField = (props) => {\r\n  const {\r\n    field: { onChange, onBlur, name, value, ref },\r\n    fieldState: { invalid, isTouched, isDirty, error },\r\n    formState: { touchedFields, dirtyFields },\r\n  } = useController({\r\n    name: props.name,\r\n    control: props.control,\r\n    rules: props.rules,\r\n    defaultValue: \"\",\r\n  });\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      className={props.className}\r\n      error={invalid}\r\n      helperText={error ? error.message : \"\"}\r\n      onChange={onChange} // send value to hook form\r\n      onBlur={onBlur} // notify when input is touched/blur\r\n      value={value} // input value\r\n      name={name} // send down the input name\r\n      inputRef={ref} // send input ref, so we can focus on input when\r\n      defaultValue={\"\"}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n    />\r\n  );\r\n};\r\n","import {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nexport const RHFSelect = (props) => {\r\n  const {\r\n    field: { onChange, onBlur, name, value, ref },\r\n    fieldState: { invalid, isTouched, isDirty, error },\r\n    formState: { touchedFields, dirtyFields },\r\n  } = useController({\r\n    name: props.name,\r\n    control: props.control,\r\n    rules: props.rules,\r\n    defaultValue: \"\",\r\n  });\r\n\r\n  return (\r\n    <FormControl className={props.className} variant=\"outlined\" error={invalid}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={value}\r\n        label={props.label}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        inputRef={ref}\r\n        name={name}\r\n        error={invalid}\r\n        helperText={error ? error.message : \"\"}\r\n        variant=\"outlined\"\r\n      >\r\n        {props.options.map((option, i) => (\r\n          <MenuItem key={i} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {error && <FormHelperText>{error.message}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/action\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../../styles/Points.scss\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { RHFTextField } from \"../../components/RHFTextField\";\r\nimport { RHFSelect } from \"../../components/RHFSelect\";\r\n\r\nfunction Points(props) {\r\n  const auth = props.token ? true : false;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    control,\r\n  } = useForm({\r\n    defaultValues: {\r\n      student: \"\",\r\n      category: \"\",\r\n      points: \"\",\r\n      house: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    let points = {\r\n      student: data.student,\r\n      house: data.house,\r\n      category: data.category,\r\n      points: parseInt(data.points),\r\n    };\r\n    props\r\n      .awardPoints(points)\r\n      .then((response) => {\r\n        handleSetAlert(\r\n          `You succesfully added points! Check the scoreboard for updated totals!`,\r\n          \"success\"\r\n        );\r\n        reset();\r\n      })\r\n      .catch((error) => {\r\n        handleSetAlert(\"Could not add points. Please try again\", \"error\");\r\n      });\r\n  };\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const handleSetAlert = (message, severity) => {\r\n    setAlert({ severity, message });\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    setAlert(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Points\">\r\n      <h1>Add Points</h1>\r\n      {auth && props.active && (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"Points-content\">\r\n          <RHFTextField\r\n            className=\"Points-formItem\"\r\n            control={control}\r\n            name=\"student\"\r\n            label=\"Student Name\"\r\n            rules={{\r\n              required: { value: true, message: \"Student name is required.\" },\r\n            }}\r\n          />\r\n\r\n          <RHFTextField\r\n            className=\"Points-formItem\"\r\n            control={control}\r\n            name=\"points\"\r\n            label=\"Point Amount\"\r\n            rules={{\r\n              required: { value: true, message: \"Point amount is required.\" },\r\n              min: { value: 1, message: \"Point amount must be positive.\" },\r\n              pattern: {\r\n                value: /^[0-9]+$/i,\r\n                message: \"Point amount must be a number.\",\r\n              },\r\n            }}\r\n          />\r\n\r\n          <RHFSelect\r\n            className=\"Points-formItem\"\r\n            control={control}\r\n            name=\"category\"\r\n            label=\"Point Category\"\r\n            rules={{\r\n              required: { value: true, message: \"Point Category is required.\" },\r\n            }}\r\n            options={props.active.category_names}\r\n          />\r\n\r\n          <RHFSelect\r\n            className=\"Points-formItem\"\r\n            control={control}\r\n            name=\"house\"\r\n            label=\"House\"\r\n            rules={{\r\n              required: { value: true, message: \"House is required.\" },\r\n            }}\r\n            options={props.active.house_names}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              handleSubmit(onSubmit);\r\n            }}\r\n            variant=\"contained\"\r\n            // key={errors.name }\r\n            color=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      )}\r\n\r\n      {!auth && (\r\n        <p style={{ color: \"black\" }}>Please sign in to access this page.</p>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={alert}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseAlert}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseAlert}\r\n          severity={alert?.severity}\r\n          sx={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n        >\r\n          {alert?.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    active: state.active,\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    awardPoints: (points) => actions.awardPoints(dispatch, points),\r\n    getPoints: () => actions.getPoints(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Points);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/action\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"../../styles/Reset.scss\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction Reset(props) {\r\n  const auth = props.token ? true : false;\r\n\r\n  const onSubmit = (data) => {\r\n    actions.reset().then((response) => {\r\n      props.getActive();\r\n    });\r\n    setOpen(false);\r\n    handleOpenAlert();\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [alert, showAlert] = React.useState(false);\r\n\r\n  const handleOpenAlert = () => {\r\n    showAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    showAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Reset\">\r\n      <h1> Reset </h1>\r\n      {auth && (\r\n        <Button\r\n          onClick={() => {\r\n            handleClickOpen();\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Start New School Year\r\n        </Button>\r\n      )}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>\r\n          {\"This action CANNOT be undone. Are you sure you want to reset?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            If you want to start a new school year click 'Reset'. This will\r\n            clear all of the data displayed on the Scoreboard.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={onSubmit}\r\n            autoFocus\r\n            style={{ color: \"#B00020\", fontWeight: \"bold\" }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={alert}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseAlert}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseAlert}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n        >\r\n          The school year was successfully reset!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {!auth && <p>Please sign in to access this page.</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    active: state.active,\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    reset: () => actions.reset(dispatch),\r\n    getActive: () => actions.getActiveSchoolyear(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);\r\n","import React from \"react\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LinkTab(props) {\r\n  return (\r\n    <Typography className={\"Banner-linkWrapper\"}>\r\n      <Link onClick={props.click} className={\"Banner-link \" + props.className} to={props.href}>{props.label}</Link>\r\n    </Typography>\r\n  );\r\n}\r\n","import { Fragment, useState } from \"react\";\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\nimport * as actions from \"../redux/action\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport \"../styles/GoogleLoginButton.scss\";\r\n\r\nconst CLIENT_ID =\r\n  \"568111533320-f5ngt3lk1hvvsv5jvjsm0lse5419btvc.apps.googleusercontent.com\";\r\n\r\nconst GoogleLoginButton = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [showUserNotFoundError, setShowUserNotFoundError] = useState(false);\r\n\r\n  const handleCloseUserNotFoundError = () => {\r\n    setShowUserNotFoundError(false);\r\n  };\r\n\r\n  const handleLoginSuccess = (response) => {\r\n    setEmail(response.profileObj.email);\r\n    props\r\n      .validateJWT({ email: response.profileObj.email })\r\n      .then((innerResponse) => {\r\n        if (innerResponse.data) {\r\n          props.setToken(response.tokenId);\r\n        } else {\r\n          // User not in our system\r\n          setShowUserNotFoundError(true);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const handleLoginFailure = (response) => {};\r\n\r\n  const handleLogout = (response) => {\r\n    props.setToken(\"\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.token ? (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <div className=\"Google-userInfo\">\r\n            <AccountCircle fontSize=\"large\" />\r\n            <Box pl=\"0.35rem\" pr=\"1rem\">\r\n              <Typography>{email}</Typography>\r\n            </Box>\r\n          </div>\r\n          <GoogleLogout\r\n            clientId={CLIENT_ID}\r\n            onLogoutSuccess={handleLogout}\r\n            render={(renderProps) => (\r\n              <GoogleButton label=\"Sign out\" onClick={renderProps.onClick} />\r\n            )}\r\n          />\r\n        </Box>\r\n      ) : (\r\n        <GoogleLogin\r\n          clientId={CLIENT_ID}\r\n          onSuccess={handleLoginSuccess}\r\n          onFailure={handleLoginFailure}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          isSignedIn={true}\r\n          render={(renderProps) => (\r\n            <GoogleButton\r\n              label=\"Sign in with Google\"\r\n              onClick={renderProps.onClick}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      {showUserNotFoundError && (\r\n        <Dialog\r\n          open={showUserNotFoundError}\r\n          onClose={handleCloseUserNotFoundError}\r\n        >\r\n          <DialogTitle>Sign In Failed</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>{`${email} is not registered. If you are a teacher, please ask a registered teacher to register you.`}</DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"outlined\" onClick={handleCloseUserNotFoundError}>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst GoogleButton = (props) => (\r\n  <Button\r\n    style={{\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n      borderColor: \"white\",\r\n    }}\r\n    size=\"large\"\r\n    startIcon={<GoogleIcon fontSize=\"large\" />}\r\n    variant=\"outlined\"\r\n    onClick={props.onClick}\r\n  >\r\n    {props.label}\r\n  </Button>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    validateJWT: (token) => actions.validateJWT(dispatch, token),\r\n    setToken: (token) => actions.setToken(dispatch, token),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleLoginButton);\r\n","import React, { Component } from \"react\";\r\nimport LinkTab from \"./LinkTab\";\r\nimport { AppBar, Grid, Button, Toolbar, Drawer } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport \"../styles/Banner.scss\";\r\nimport GoogleLoginButton from \"./GoogleLoginButton\";\r\nimport * as actions from \"../redux/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Banner extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isAuthenticated: true,\r\n    };\r\n  }\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ menuOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        <AppBar className=\"Banner-appBar\" component={Grid} position=\"sticky\">\r\n          <Toolbar>\r\n            <Grid item xs={8} className=\"Banner-desktop\">\r\n              <div className=\"Banner-tabs--content\">\r\n                <LinkTab label=\"Scoreboard\" href=\"/Scoreboard\" />\r\n                <LinkTab label=\"Events\" href=\"/Events\" />\r\n                <LinkTab\r\n                  label=\"Add Points\"\r\n                  href=\"/Admin/Points\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                />\r\n                <LinkTab\r\n                  label=\"History\"\r\n                  href=\"/Admin/AwardsTable\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                />\r\n                <LinkTab\r\n                  label=\"Users\"\r\n                  href=\"/Admin/UsersTable\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                />\r\n                <LinkTab\r\n                  label=\"School Years\"\r\n                  href=\"/Admin/Reset\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <div className=\"Banner-mobile\">\r\n              <Button\r\n                onClick={() =>\r\n                  this.setState({ menuOpen: !this.state.menuOpen })\r\n                }\r\n                aria-label=\"menu\"\r\n                aria-haspopup=\"true\"\r\n              >\r\n                <MenuIcon className=\"Banner-menuToggle\" />\r\n              </Button>\r\n              <Drawer\r\n                open={this.state.menuOpen}\r\n                anchor=\"left\"\r\n                onClose={this.handleMenuClose}\r\n              >\r\n                <Button\r\n                  onClick={() => this.setState({ menuOpen: false })}\r\n                  className=\"Banner-menu\"\r\n                >\r\n                  <ChevronLeft />\r\n                </Button>\r\n                <LinkTab\r\n                  label=\"Scoreboard\"\r\n                  href=\"/Scoreboard\"\r\n                  click={this.handleMenuClose}\r\n                />\r\n                <LinkTab\r\n                  label=\"Events\"\r\n                  href=\"/Events\"\r\n                  click={this.handleMenuClose}\r\n                />\r\n                <LinkTab\r\n                  label=\"Add Points\"\r\n                  href=\"/Admin/Points\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                  click={this.handleMenuClose}\r\n                />\r\n                <LinkTab\r\n                  label=\"History\"\r\n                  href=\"/Admin/AwardsTable\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                  click={this.handleMenuClose}\r\n                />\r\n                <LinkTab\r\n                  label=\"Users\"\r\n                  href=\"/Admin/UsersTable\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                  click={this.handleMenuClose}\r\n                />\r\n                <LinkTab\r\n                  label=\"School Years\"\r\n                  href=\"/Admin/Reset\"\r\n                  className={\r\n                    this.props.token ? \"Banner-showTab\" : \"Banner-hideTab\"\r\n                  }\r\n                  click={this.handleMenuClose}\r\n                />\r\n              </Drawer>\r\n            </div>\r\n            <Grid item sm={4} className=\"Banner-tabs--authentication\">\r\n              <GoogleLoginButton />\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    activeSchoolYear: state.active,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    validateJWT: (token) => actions.validateJWT(dispatch, token),\r\n    setToken: (token) => actions.setToken(dispatch, token),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Banner);\r\n","import { forwardRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/action\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Box, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nfunction AwardsTable(props) {\r\n  const [alert, setAlert] = useState(null);\r\n  const handleCloseAlert = () => {\r\n    setAlert(null);\r\n  };\r\n  const handleSetAlert = (message, severity) => {\r\n    setAlert({ severity, message });\r\n  };\r\n\r\n  const auth = props.token ? true : false;\r\n\r\n  const houseLookup = props.activeSchoolYear.house_names?.reduce(\r\n    (houseMap, house) => ((houseMap[house] = house), houseMap),\r\n    {}\r\n  );\r\n\r\n  const pointCategoryLookup = props.activeSchoolYear.category_names?.reduce(\r\n    (pointCategoryMap, pointCategory) => (\r\n      (pointCategoryMap[pointCategory] = pointCategory), pointCategoryMap\r\n    ),\r\n    {}\r\n  );\r\n\r\n  const createdDateToString = (createdDateString) => {\r\n    const utcDate = new Date(Number(createdDateString) * 1000);\r\n    const localDate = moment(utcDate)\r\n      .tz(\"America/New_York\")\r\n      .format(\"MM/DD/YYYY h:mm:ss A\");\r\n    return localDate;\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"SK\", field: \"SK\", hidden: true },\r\n    {\r\n      title: \"Student Name\",\r\n      field: \"student_name\",\r\n      validate: (rowData) =>\r\n        Boolean(rowData.student_name) || { isValid: false },\r\n    },\r\n    {\r\n      title: \"Point Amount\",\r\n      field: \"points\",\r\n      validate: (rowData) =>\r\n        (Boolean(rowData.points) &&\r\n          Number(rowData.points) &&\r\n          Number(rowData.points) > 0) || { isValid: false },\r\n    },\r\n\r\n    {\r\n      title: \"Point Category\",\r\n      field: \"category_name\",\r\n      lookup: pointCategoryLookup,\r\n      validate: (rowData) =>\r\n        Boolean(rowData.category_name) || { isValid: false },\r\n    },\r\n\r\n    {\r\n      title: \"House\",\r\n      field: \"house_name\",\r\n      lookup: houseLookup,\r\n      validation: (rowData) =>\r\n        Boolean(rowData.house_name) || { isValid: false },\r\n    },\r\n\r\n    {\r\n      title: \"Time\",\r\n      field: \"created_time\",\r\n      editable: \"never\",\r\n      render: (rowData) => createdDateToString(rowData.created_time),\r\n    },\r\n  ].map((column) => {\r\n    return { ...column, sorting: false };\r\n  });\r\n\r\n  return (\r\n    <Box px=\"3rem\" py=\"1rem\">\r\n      {auth && (\r\n        <MaterialTable\r\n          options={{\r\n            maxBodyHeight: \"68vh\",\r\n            search: false,\r\n            pageSize: 10,\r\n            emptyRowsWhenPaging: false,\r\n          }}\r\n          localization={{\r\n            body: {\r\n              editRow: {\r\n                deleteText: \"Are you sure you want to remove these points?\",\r\n              },\r\n            },\r\n          }}\r\n          title=\"Points Awarded\"\r\n          columns={columns}\r\n          data={(query) =>\r\n            new Promise((resolve, reject) => {\r\n              props\r\n                .getAllAwards(query.page, query.pageSize)\r\n                .then((response) => {\r\n                  resolve({\r\n                    data: response.data.content,\r\n                    page: response.data.page,\r\n                    totalCount: response.data.totalCount,\r\n                  });\r\n                });\r\n            })\r\n          }\r\n          icons={tableIcons}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                props\r\n                  .updateAward(newData)\r\n                  .then((response) =>\r\n                    handleSetAlert(\"Successfully updated\", \"success\")\r\n                  )\r\n                  .catch((error) => {\r\n                    handleSetAlert(\r\n                      \"Could not update. Please try again\",\r\n                      \"error\"\r\n                    );\r\n                  })\r\n                  .finally(() => resolve());\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                props\r\n                  .deleteAward(oldData.SK)\r\n                  .then((response) => handleSetAlert(\"Successfully deleted\"))\r\n                  .catch((error) =>\r\n                    handleSetAlert(\r\n                      \"Could not delete. Please try again\",\r\n                      \"error\"\r\n                    )\r\n                  )\r\n                  .finally(() => resolve());\r\n              }),\r\n          }}\r\n        />\r\n      )}\r\n      {!auth && <p>Please sign in to access this page.</p>}\r\n      <Snackbar\r\n        open={alert}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseAlert}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseAlert}\r\n          severity={alert?.severity}\r\n          sx={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n        >\r\n          {alert?.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    awards: state.awards,\r\n    activeSchoolYear: state.active,\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllAwards: (page, size) => actions.getAllAwards(dispatch, page, size),\r\n    updateAward: (award) => actions.updateAward(dispatch, award),\r\n    deleteAward: (awardId) => actions.deleteAward(dispatch, awardId),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AwardsTable);\r\n","import { forwardRef, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/action\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Box, Button, Dialog, Snackbar, TextField } from \"@material-ui/core\";\r\nimport { useController, useForm } from \"react-hook-form\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nfunction UsersTable(props) {\r\n  const auth = props.token ? true : false;\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [showAddDialog, setShowAddDialog] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const { control, handleSubmit, reset } = useForm({\r\n    defaultValues: { email: \"\" },\r\n  });\r\n  const {\r\n    field: { onChange, onBlur, name, value, ref },\r\n    fieldState: { invalid, isTouched, isDirty, error },\r\n    formState: { touchedFields, dirtyFields },\r\n  } = useController({\r\n    name: \"email\",\r\n    control,\r\n    rules: { required: true, pattern: /^\\S+@\\S+$/i },\r\n    defaultValue: \"\",\r\n  });\r\n\r\n  const loadUsers = (onSuccess) => {\r\n    props.getAllUsers().then((innerResponse) => {\r\n      setUsers(innerResponse.data);\r\n      if (onSuccess) {\r\n        onSuccess();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCloseAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const handleSetAlert = (message, severity) => {\r\n    setAlert({ severity, message });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    props\r\n      .createUser(data)\r\n      .then((response) => {\r\n        handleSetAlert(`Successfully added ${data.email}`, \"success\");\r\n        loadUsers(() => {\r\n          // setShowAddDialog(false);\r\n          reset();\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        handleSetAlert(`${data.email} already exists.`, \"error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { title: \"SK\", field: \"SK\", hidden: true },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n      validate: (rowData) =>\r\n        (Boolean(rowData.email) && EmailValidator.validate(rowData.email)) || {\r\n          isValid: false,\r\n        }, // true\r\n      sorting: false,\r\n    },\r\n  ];\r\n  // .map((column) => {\r\n  //   return { ...column, sorting: false };\r\n  // });\r\n\r\n  return (\r\n    <Box px=\"3rem\" py=\"1rem\">\r\n      {auth && (\r\n        <MaterialTable\r\n          options={{ maxBodyHeight: \"70vh\", paging: false }}\r\n          localization={{\r\n            body: {\r\n              editRow: {\r\n                deleteText: \"Are you sure you want to remove this user?\",\r\n              },\r\n            },\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => <Add />,\r\n              tooltip: \"Add User\",\r\n              isFreeAction: true,\r\n              onClick: () => setShowAddDialog(true),\r\n            },\r\n          ]}\r\n          title=\"Users\"\r\n          columns={columns}\r\n          data={users}\r\n          icons={tableIcons}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                props\r\n                  .updateUser(newData)\r\n                  .then((response) => {\r\n                    handleSetAlert(\r\n                      `Successfully updated ${newData.email}`,\r\n                      \"success\"\r\n                    );\r\n                  })\r\n                  .catch((error) => {\r\n                    handleSetAlert(`${newData.email} already exists.`, \"error\");\r\n                  })\r\n                  .finally(() => loadUsers(resolve));\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                props\r\n                  .deleteUser(oldData.SK)\r\n                  .then((response) =>\r\n                    handleSetAlert(\r\n                      `Successfully deleted ${oldData.email}`,\r\n                      \"success\"\r\n                    )\r\n                  )\r\n                  .catch((error) => {\r\n                    handleSetAlert(\r\n                      `Could not delete ${oldData.email}. Please try again`,\r\n                      \"error\"\r\n                    );\r\n                  })\r\n                  .finally(() => loadUsers(resolve));\r\n              }),\r\n          }}\r\n        />\r\n      )}\r\n      <Dialog open={showAddDialog} onClose={() => setShowAddDialog(false)}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          padding=\"2rem\"\r\n        >\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              error={invalid}\r\n              helperText={\r\n                error\r\n                  ? error.type === \"pattern\"\r\n                    ? \"Invalid email\"\r\n                    : \"Required\"\r\n                  : \"\"\r\n              }\r\n              onChange={onChange} // send value to hook form\r\n              onBlur={onBlur} // notify when input is touched/blur\r\n              value={value} // input value\r\n              name={name} // send down the input name\r\n              inputRef={ref} // send input ref, so we can focus on input when\r\n              defaultValue={\"\"}\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n            />\r\n            <Box display=\"flex\" width=\"100%\" pt=\"1rem\">\r\n              <Button\r\n                fullWidth\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              >\r\n                Add User\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={alert}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseAlert}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseAlert}\r\n          severity={alert?.severity}\r\n          sx={{ width: \"100%\" }}\r\n          variant=\"filled\"\r\n        >\r\n          {alert?.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      {!auth && (\r\n        <p className=\"authError\">Please sign in to access this page.</p>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllUsers: () => actions.getAllUsers(dispatch),\r\n    updateUser: (user) => actions.updateUser(dispatch, user),\r\n    deleteUser: (id) => actions.deleteUser(dispatch, id),\r\n    createUser: (user) => actions.createUser(dispatch, user),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersTable);\r\n","export default __webpack_public_path__ + \"static/media/Compassion.f256f04e.png\";","export default __webpack_public_path__ + \"static/media/Grit.cc99694d.png\";","export default __webpack_public_path__ + \"static/media/Tenacious.388e91de.png\";","export default __webpack_public_path__ + \"static/media/Visionary.425a176b.png\";","import React, { Component, img } from \"react\";\r\nimport { Grid, Button, Modal } from \"@material-ui/core\";\r\nimport \"../styles/House.scss\";\r\nimport PieChart from \"./PieChart\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nexport const House = (props) => {\r\n  const options = {\r\n    chart: {\r\n      type: \"pie\",\r\n    },\r\n    labels: props.labels,\r\n    legend: {\r\n      show: false,\r\n      horizontalAlign: \"center\",\r\n      position: \"bottom\",\r\n    },\r\n  };\r\n  const legend = { show: false };\r\n  const series = props.scores.length > 0 ? props.scores : [];\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={3} className=\"House-item\">\r\n      <img src={props.logo} className=\"House-image\" />\r\n      <h1 className=\"House-name\">{props.name}</h1>\r\n      <h2>{props.score}</h2>\r\n      <div className=\"House-pieChart\">\r\n        <Chart options={options} series={series} type=\"pie\" width=\"300\" />\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n","\r\nimport React, { Component, img } from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nclass PieChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            options: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                labels: ['Peaceful', 'Safe', 'Respectful'] \r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            peaceful: this.props.peaceful,\r\n            safe: this.props.safe,\r\n            respectful: this.props.respectful,\r\n            series: [this.props.peaceful, this.props.safe, this.props.respectful]\r\n\r\n        };\r\n    }\r\n\r\n       \r\n    render () {\r\n        return (\r\n            <Grid>\r\n            <Grid>\r\n                <h1>{this.state.series} Heloo</h1>\r\n            </Grid>\r\n            <Grid>\r\n                <Chart options={this.state.options}\r\n                       series={[0,1,2]}\r\n                       type=\"pie\"\r\n                       width=\"300\"/>\r\n            </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default PieChart;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport \"../styles/Award.scss\";\r\n\r\nclass Award extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      house: this.props.house,\r\n      points: this.props.points,\r\n      category: this.props.category,\r\n      time: this.props.timeStamp,\r\n      name: this.props.name,\r\n      logo: this.props.logo,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Award\">\r\n        {/* <Col className = \"Award\"> */}\r\n        <Card className=\"Award-wrapper\">\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            className=\"Award-column\"\r\n            style={{ gap: 2 }}\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item xs={3} className=\"Award-houseImg\">\r\n              <img src={this.state.logo} className=\"Award-housePic\" />\r\n            </Grid>\r\n            <Grid item xs={8} className=\"Award-text\">\r\n              <div className=\"Award-type\">\r\n                <h2>\r\n                  {this.state.name} earned {this.state.points}{\" \"}\r\n                  {this.state.category} points{\" \"}\r\n                </h2>\r\n              </div>\r\n              <div className=\"Award-time\">{this.state.time}</div>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        {/* </Col> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Award;\r\n","import React, { Component, Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/action\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  GridList,\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport compassion from \"./Compassion.png\";\r\nimport grit from \"./Grit.png\";\r\nimport tenacious from \"./Tenacious.png\";\r\nimport visionary from \"./Visionary.png\";\r\nimport { House } from \"../components/House\";\r\nimport moment from \"moment\";\r\nimport Award from \"../components/Award\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"../styles/Scoreboard.scss\";\r\nimport Slider from \"react-slick\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { SCOREBOARD_REFRESH_TIME } from \"../appConstants\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\n\r\nexport const Scoreboard = (props) => {\r\n  const [activeSchoolYear, setActiveSchoolYear] = useState(null);\r\n  const [points, setPoints] = useState([]);\r\n  const [activity, setActivity] = useState([]);\r\n  const [schoolYearNames, setSchoolYearNames] = useState([]);\r\n  const [selectedSchoolYearId, setSelectedSchoolYearId] = useState(null);\r\n  const selectedSchoolYearIdRef = useRef(selectedSchoolYearId);\r\n  selectedSchoolYearIdRef.current = selectedSchoolYearId;\r\n\r\n  const logos = [compassion, grit, tenacious, visionary];\r\n  const legendClasses = [\r\n    \"Scoreboard-first\",\r\n    \"Scoreboard-second\",\r\n    \"Scoreboard-third\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadActiveSchoolYear((id) => {\r\n      loadPoints(id);\r\n      loadActivity();\r\n      loadSchoolYearNames();\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeSchoolYear) {\r\n      const interval = setInterval(refresh, SCOREBOARD_REFRESH_TIME);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [activeSchoolYear]);\r\n\r\n  const refresh = () => {\r\n    if (activeSchoolYear.SK === selectedSchoolYearIdRef.current) {\r\n      loadPoints(selectedSchoolYearIdRef.current);\r\n      loadActivity();\r\n    }\r\n  };\r\n\r\n  const loadSchoolYearNames = () => {\r\n    actions.getSchoolYearNames().then((response) => {\r\n      setSchoolYearNames(response.data);\r\n    });\r\n  };\r\n\r\n  const loadPoints = (schoolYearId) => {\r\n    actions.getPointsIntegersPromise(schoolYearId).then((response) => {\r\n      setPoints(response.data);\r\n    });\r\n  };\r\n\r\n  const loadActiveSchoolYear = (onSuccess) => {\r\n    actions.getActiveSchoolyearPromise().then((response) => {\r\n      setActiveSchoolYear(response.data);\r\n      setSelectedSchoolYearId(response.data.SK);\r\n      if (onSuccess) {\r\n        onSuccess(response.data.SK);\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadActivity = () => {\r\n    actions.getRecentAwardsPromise().then((response) => {\r\n      setActivity(response.data);\r\n    });\r\n  };\r\n\r\n  const getScoreByHouse = (houseId) => {\r\n    let total = 0;\r\n    points?.forEach((point) => {\r\n      if (point.houseId === houseId) {\r\n        total += point.points;\r\n      }\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const getHouseName = (houseId) => {\r\n    let name = \"\";\r\n    activeSchoolYear?.houses?.forEach((house) => {\r\n      if (house.id === houseId) {\r\n        name = house.name;\r\n      }\r\n    });\r\n    return name;\r\n  };\r\n\r\n  const getPointCategory = (categoryId) => {\r\n    let name = \"\";\r\n    activeSchoolYear?.pointCategories?.forEach((category) => {\r\n      if (category.id === categoryId) {\r\n        name = category.name;\r\n      }\r\n    });\r\n    return name;\r\n  };\r\n\r\n  const getTimeSince = (timeStamp) => {\r\n    let dateOfActivity = moment(new Date(Number(timeStamp * 1000)));\r\n    let now = moment();\r\n    let timeSince = dateOfActivity.from(now);\r\n    return timeSince;\r\n  };\r\n\r\n  const getPointsBreakDown = (houseId) => {\r\n    let pointsList = [0, 0, 0];\r\n    let index = 0;\r\n    points?.forEach((category, i) => {\r\n      if (category.houseId === houseId) {\r\n        pointsList[category.pointCategoryId - 6] = category.points;\r\n        index = index + 1;\r\n      }\r\n    });\r\n    return pointsList;\r\n  };\r\n\r\n  const handleSelectSchoolYear = (event) => {\r\n    setSelectedSchoolYearId(event.target.value);\r\n    loadPoints(event.target.value);\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    <Box pb=\"3rem\">\r\n      <Grid justifyContent=\"center\">\r\n        {/* <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\"> */}\r\n        <h1>Belle Heth Houses</h1>\r\n\r\n        {/* <IconButton size=\"small\" onClick={refresh}>\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        </Box> */}\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selectedSchoolYearId}\r\n            label=\"School Year\"\r\n            onChange={handleSelectSchoolYear}\r\n          >\r\n            {schoolYearNames.map((schoolYear) => (\r\n              <MenuItem value={schoolYear.SK}>\r\n                {schoolYear.schoolyear_name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Grid container spacing={0} justifyContent=\"center\">\r\n          {activeSchoolYear?.house_names?.map((house, i) => {\r\n            return (\r\n              <House\r\n                name={house.name}\r\n                logo={logos[i]}\r\n                score={\r\n                  points?.length > 0 ? points[i].reduce((a, b) => a + b, 0) : 0\r\n                }\r\n                scores={points?.length > 0 ? points[i] : [0, 0, 0]}\r\n                showLegend={i > 2 ? true : false}\r\n                labels={activeSchoolYear?.category_names}\r\n              ></House>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Grid className=\"Scoreboard-legend\" containerSpacing={2}>\r\n          {activeSchoolYear?.category_names.map((name, i) => (\r\n            <div key={i} className=\"Scoreboard-row1\">\r\n              <Box class={legendClasses[i]}></Box>\r\n              <h3>{name}</h3>\r\n            </div>\r\n          ))}\r\n        </Grid>\r\n        {activeSchoolYear?.SK === selectedSchoolYearId && (\r\n          <Fragment>\r\n            <h2>Recent Activity</h2>\r\n            <Carousel className=\"carousel\">\r\n              {activity?.map((reward, i) => {\r\n                return (\r\n                  <Award\r\n                    name={reward.student_name}\r\n                    points={reward.points}\r\n                    category={reward.category_name}\r\n                    house={reward.house_name}\r\n                    timeStamp={getTimeSince(reward.created_time)}\r\n                    logo={\r\n                      logos[\r\n                        activeSchoolYear?.house_names.indexOf(reward.house_name)\r\n                      ]\r\n                    }\r\n                  ></Award>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    points: state.points,\r\n    active: state.active,\r\n    activity: state.awards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPoints: () => actions.getPoints(dispatch),\r\n    getActive: () => actions.getActiveSchoolyear(dispatch),\r\n    getActivity: () => actions.getRecentAwards(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scoreboard);\r\n","import { forwardRef, Fragment, useEffect, useState } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/action\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport { RHFTextField } from \"../../components/RHFTextField\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport CircleIcon from \"@mui/icons-material/Circle\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Snackbar,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useController, useForm } from \"react-hook-form\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nfunction SchoolYearsTable(props) {\r\n  const [alert, setAlert] = useState(null);\r\n  const handleCloseAlert = () => {\r\n    setAlert(null);\r\n  };\r\n  const handleSetAlert = (message, severity) => {\r\n    setAlert({ severity, message });\r\n  };\r\n  const [schoolYears, setSchoolYears] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  //   const [showAddDialog, setShowAddDialog] = useState(false);\r\n\r\n  const { control, handleSubmit, reset } = useForm({\r\n    defaultValues: { name: \"\" },\r\n  });\r\n  const {\r\n    field: { onChange, onBlur, name, value, ref },\r\n    fieldState: { invalid, isTouched, isDirty, error },\r\n    formState: { touchedFields, dirtyFields },\r\n  } = useController({\r\n    name: \"schoolyear_name\",\r\n    control,\r\n    rules: { required: true },\r\n    defaultValue: \"\",\r\n  });\r\n\r\n  const loadSchoolYears = (onSuccess) => {\r\n    props.getAllSchoolYears().then((innerResponse) => {\r\n      setSchoolYears(innerResponse.data);\r\n      if (onSuccess) {\r\n        onSuccess();\r\n      }\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    props\r\n      .startNewSchoolYear(data)\r\n      .then((response) => {\r\n        loadSchoolYears(() => {\r\n          props.getActive();\r\n          reset();\r\n          setOpen(false);\r\n          handleSetAlert(\r\n            `Successfully started new school year: ${data.name}`,\r\n            \"success\"\r\n          );\r\n        });\r\n      })\r\n      .catch((error) =>\r\n        handleSetAlert(\r\n          \"Could not start new school year. Please try again\",\r\n          \"error\"\r\n        )\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSchoolYears();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { title: \"SK\", field: \"SK\", hidden: true },\r\n    {\r\n      title: \"Name\",\r\n      field: \"schoolyear_name\",\r\n      validate: (rowData) =>\r\n        Boolean(rowData.schoolyear_name) || {\r\n          isValid: false,\r\n        }, // true\r\n    },\r\n    { title: \"Active\", field: \"is_active\", hidden: true },\r\n  ].map((column) => {\r\n    return { ...column, sorting: false };\r\n  });\r\n\r\n  return (\r\n    <Box px=\"3rem\" py=\"1rem\">\r\n      {props.token ? (\r\n        <Fragment>\r\n          <Dialog open={open} onClose={() => setOpen(false)}>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              alignItems=\"center\"\r\n              padding=\"2rem\"\r\n            >\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <RHFTextField\r\n                  control={control}\r\n                  name=\"schoolyear_name\"\r\n                  label=\"New School Year Name\"\r\n                  rules={{\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Required.\",\r\n                    },\r\n                  }}\r\n                />\r\n\r\n                <Box display=\"flex\" width=\"100%\" pt=\"1rem\">\r\n                  <Button\r\n                    fullWidth\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Start New School Year\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            </Box>\r\n          </Dialog>\r\n\r\n          {/* <Box display=\"flex\" justifyContent=\"center\">\r\n        <Box width=\"40vw\"> */}\r\n          <MaterialTable\r\n            options={{ maxBodyHeight: \"50vh\", paging: false }}\r\n            localization={{\r\n              body: {\r\n                editRow: {\r\n                  deleteText: \"Are you sure you want to remove this user?\",\r\n                },\r\n              },\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: () => <Add />,\r\n                tooltip: \"Start new school year\",\r\n                isFreeAction: true,\r\n                onClick: () => setOpen(true),\r\n              },\r\n              (rowData) => ({\r\n                icon: () => (\r\n                  <CircleIcon\r\n                    style={{\r\n                      color: rowData.is_active === \"true\" ? \"green\" : \"red\",\r\n                    }}\r\n                  />\r\n                ),\r\n                tooltip: \"Set Active\",\r\n                onClick: (event, rowData) => {\r\n                  if (\r\n                    window.confirm(\r\n                      `Are you sure you want to set ${rowData.schoolyear_name} to be the active school year? This action will change the active school year for all users, and all points awarded now will be saved as part of the scores for ${rowData.schoolyear_name}.`\r\n                    )\r\n                  ) {\r\n                    props\r\n                      .setActive(rowData.SK)\r\n                      .then((response) => {\r\n                        handleSetAlert(\r\n                          `Successfully changed school year ${rowData.schoolyear_name} to active`,\r\n                          \"success\"\r\n                        );\r\n                      })\r\n                      .catch((error) => {\r\n                        handleSetAlert(\r\n                          `Could not set school year ${rowData.schoolyear_name} to active`,\r\n                          \"error\"\r\n                        );\r\n                      })\r\n                      .finally(() =>\r\n                        loadSchoolYears(() => {\r\n                          props.getActive();\r\n                        })\r\n                      );\r\n                  }\r\n                },\r\n                disabled: rowData.is_active === \"true\",\r\n              }),\r\n            ]}\r\n            title=\"School Years\"\r\n            columns={columns}\r\n            data={schoolYears}\r\n            icons={tableIcons}\r\n            editable={{\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  props\r\n                    .updateSchoolYear(newData)\r\n                    .then(() => {\r\n                      handleSetAlert(\r\n                        `ouccessfully renamed school year ${newData.schoolyear_name}`\r\n                      );\r\n                    })\r\n                    .catch((error) => {\r\n                      handleSetAlert(\r\n                        `Could not rename school year ${oldData.schoolyear_name}. Please try again`\r\n                      );\r\n                    })\r\n                    .finally((response) => loadSchoolYears(resolve));\r\n                }),\r\n              //   onRowDelete: (oldData) =>\r\n              //     new Promise((resolve, reject) => {\r\n              //       props\r\n              //         .deleteUser(oldData.id)\r\n              //         .then((response) => loadUsers(resolve));\r\n              //     }),\r\n            }}\r\n          />\r\n          {/* </Box>\r\n      </Box> */}\r\n          {/* <Dialog open={showAddDialog} onClose={() => setShowAddDialog(false)}> */}\r\n\r\n          {/* </Dialog> */}\r\n          <Snackbar\r\n            open={alert}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseAlert}\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handleCloseAlert}\r\n              severity={alert?.severity}\r\n              sx={{ width: \"100%\" }}\r\n              variant=\"filled\"\r\n            >\r\n              {alert?.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Fragment>\r\n      ) : (\r\n        <p className=\"authError\">Please sign in to access this page.</p>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { token: state.token };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllSchoolYears: () => actions.getSchoolYearNames(dispatch),\r\n    updateSchoolYear: (schoolYear) =>\r\n      actions.updateSchoolYearName(dispatch, schoolYear),\r\n    startNewSchoolYear: (schoolYear) => actions.reset(dispatch, schoolYear),\r\n    deleteUser: (id) => actions.deleteUser(dispatch, id),\r\n    createUser: (user) => actions.createUser(dispatch, user),\r\n    getActive: () => actions.getActiveSchoolyear(dispatch),\r\n    setActive: (id) => actions.setSchoolYearActive(dispatch, id),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SchoolYearsTable);\r\n","import \"./App.css\";\r\nimport Events from \"./pages/Events\";\r\nimport Login from \"./pages/Login\";\r\nimport Logout from \"./pages/Logout\";\r\nimport Points from \"./pages/Admin/Points\";\r\nimport Reset from \"./pages/Admin/Reset\";\r\nimport Banner from \"./components/Banner\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./redux/action\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AwardsTable from \"./pages/Admin/AwardsTable\";\r\nimport UsersTable from \"./pages/Admin/UsersTable\";\r\nimport { Scoreboard } from \"./pages/Scoreboard\";\r\nimport SchoolYearsTable from \"./pages/Admin/SchoolYearsTable\";\r\n\r\nclass App extends Component {\r\n  componentDidMount = () => {\r\n    this.props.getActive();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div>\r\n            <Banner />\r\n            {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route path=\"/Scoreboard\">\r\n                <Scoreboard />\r\n              </Route>\r\n              <Route path=\"/Events\">\r\n                <Events />\r\n              </Route>\r\n              <Route path=\"/Admin/Points\">\r\n                <Points />\r\n              </Route>\r\n              <Route path=\"/Admin/AwardsTable\">\r\n                <AwardsTable />\r\n              </Route>\r\n              <Route path=\"/Admin/UsersTable\">\r\n                <UsersTable />\r\n              </Route>\r\n              <Route path=\"/Admin/Reset\">\r\n                <SchoolYearsTable />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Scoreboard />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    active: state.active,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getActive: () => actions.getActiveSchoolyear(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as appConstants from \"../appConstants\";\r\n\r\nconst initialState = {\r\n  active: {},\r\n  points: {},\r\n  events: [],\r\n  awards: [],\r\n  token: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case appConstants.GET_ACTIVE_SCHOOLYEAR:\r\n      return { ...state, active: action.payload };\r\n    case appConstants.GET_POINTS:\r\n      return { ...state, points: action.payload };\r\n    case appConstants.UPDATE_POINTS:\r\n      return { ...state, points: state.points.concat(action.payload) };\r\n    case appConstants.GET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: action.success ? action.payload : { ...state.events },\r\n      };\r\n    case appConstants.GET_RECENT_AWARDS:\r\n      return { ...state, awards: action.payload };\r\n    case appConstants.UPDATE_AWARDS:\r\n      let awards = state.awards.map((award) => {\r\n        return award.id === action.payload.id ? action.payload : award;\r\n      });\r\n      return { ...state, awards: awards };\r\n    case appConstants.UPDATE_AWARDS_DELETED:\r\n      let newAwards = state.awards.filter((award) => {\r\n        return award.id !== action.payload;\r\n      });\r\n      return { ...state, awards: newAwards };\r\n    case appConstants.SET_TOKEN:\r\n      return { ...state, token: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <SnackbarProvider maxSnack={3}>\r\n        <App />\r\n      </SnackbarProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}